{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"max-",
				"max-width"
			],
			[
				"max",
				"max-height"
			],
			[
				"arrow",
				"glyphicon-arrow-up	 bootstrap.min.css"
			],
			[
				"hea",
				"header-shadow	 myTemplate.css"
			],
			[
				"textal",
				"text-align"
			],
			[
				"table",
				"table-cell"
			],
			[
				"pad",
				"padding"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"contai",
				"container-fluid	 bootstrap.min.css"
			],
			[
				"function",
				"function without name"
			],
			[
				"scrollto",
				"scrollTo(x_coord, y_coord)	Window"
			],
			[
				"cu",
				"cursor"
			],
			[
				"padd",
				"padding-left"
			],
			[
				"list",
				"list-style"
			],
			[
				"border-bott",
				"border-bottom-color"
			],
			[
				"backg",
				"background-size"
			],
			[
				"tran",
				"translateY()"
			],
			[
				"bor",
				"border-box"
			],
			[
				"box-s",
				"box-sizing"
			],
			[
				"list-",
				"list-style-type"
			],
			[
				"link",
				"link	body (depr)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Projekty.html",
			"settings":
			{
				"buffer_size": 16295,
				"line_ending": "Windows"
			}
		},
		{
			"file": "js/ajaxnavigation.js",
			"settings":
			{
				"buffer_size": 4735,
				"line_ending": "Windows"
			}
		},
		{
			"file": "css/myTemplate.css",
			"settings":
			{
				"buffer_size": 3596,
				"line_ending": "Windows"
			}
		},
		{
			"file": "css/gallery.css",
			"settings":
			{
				"buffer_size": 200,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "namespace LekarzCore.ViewModels\n{\n    public class MainViewModel: Screen\n    {\n        private readonly IEventAggregator _ev;\n\n        private CancellationTokenSource _cancellationTokenSource;\n\n        private BindableCollection&lt;Appointment&gt; _appointments;\n\n        public BindableCollection&lt;Appointment&gt; Appointments\n        {\n            get { return _appointments; }\n            private set\n            {\n                _appointments = value;\n                NotifyOfPropertyChange();\n            }\n        }\n\n        private bool _loading;\n\n        public bool Loading\n        {\n            get\n            {\n                return _loading;\n            }\n            private set\n            {\n                _loading = value;\n                NotifyOfPropertyChange();\n            }\n        }\n\n        public MainViewModel()\n        {\n            _ev = IoC.Get&lt;IEventAggregator&gt;(\"eventAggregator\");            \n        }\n\n        public void ViewDetails(Appointment sender)\n        {\n\n            _ev.PublishOnUIThread(new Navigation(NagivationPages.Details, new []{ sender.Id.ToString(), sender.PatientId.ToString() }));\n        }\n\n        protected override void OnActivate()\n        {\n            Appointments=new BindableCollection&lt;Appointment&gt;();\n            _cancellationTokenSource = new CancellationTokenSource();\n            PeriodicUpdateDataAsync(TimeSpan.FromSeconds(30), _cancellationTokenSource.Token);\n            base.OnActivate();\n            \n        }\n\n        protected override void OnDeactivate(bool close)\n        {\n            _cancellationTokenSource.Cancel();\n            base.OnDeactivate(close);\n        }\n\n\n        public async Task PeriodicUpdateDataAsync(TimeSpan interval, CancellationToken token)\n        {\n            while (!token.IsCancellationRequested)\n            {\n                Loading = true;\n                var client = new LekarzServiceClient();\n                client.ClientCredentials.ServiceCertificate.Authentication.CertificateValidationMode = X509CertificateValidationMode.None;\n                client.ClientCredentials.UserName.UserName = IoC.Get&lt;UserData&gt;(\"UserData\").UserName;\n                client.ClientCredentials.UserName.Password = IoC.Get&lt;UserData&gt;(\"UserData\").Password;\n                var result = await client.GetAppointmentsAsync(IoC.Get&lt;UserData&gt;(\"UserData\").ClinicId, IoC.Get&lt;UserData&gt;(\"UserData\").DoctorId);\n\n                Appointments = new BindableCollection&lt;Appointment&gt;(result);\n\n                client.Close();\n                Loading = false;\n\n                if (interval &gt; TimeSpan.Zero)\n                {\n                    await Task.Delay(interval, token);\n                }\n            }\n           \n        }\n    }\n}",
			"settings":
			{
				"buffer_size": 2765,
				"line_ending": "Windows",
				"name": "namespace LekarzCore.ViewModels"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 242.0,
		"last_filter": "html",
		"selected_items":
		[
			[
				"html",
				"HTMLBeautify"
			],
			[
				"jav",
				"Javascript Beautify"
			],
			[
				"javascri",
				"Javascript Beautify"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"beau",
				"HTMLBeautify"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/css",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/img/gallery",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/js"
	],
	"file_history":
	[
		"/C/Users/Lukasz/Desktop/zzz",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/css/gallery.css",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/css/bootstrap.css",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/Kontakt.html",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/Certyfikaty.html",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/js/scrollInto.js",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/js/ajaxnavigation.js",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/css/myTemplate.css",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/index.html",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/js/gallery.js",
		"/C/Users/Lukasz/Downloads/jquery.scrollTo-2.1.2/jquery.scrollTo.min.js",
		"/C/Users/Lukasz/Desktop/GitHub/LukaszLyskawa.github.io/js/navbar.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"<current file>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			">",
			"<",
			">",
			"<",
			"img",
			">",
			"<",
			"3",
			"img",
			"gallery",
			"Gallery",
			">\n",
			";*/\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"&gt;",
			"&lt;",
			"&gt;",
			"&lt;"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Projekty.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16295,
						"regions":
						{
						},
						"selection":
						[
							[
								7080,
								7080
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2494.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "js/ajaxnavigation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4735,
						"regions":
						{
						},
						"selection":
						[
							[
								4656,
								4656
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1223.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "css/myTemplate.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3596,
						"regions":
						{
						},
						"selection":
						[
							[
								1190,
								1190
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 94.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "css/gallery.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 200,
						"regions":
						{
						},
						"selection":
						[
							[
								200,
								200
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"color_scheme": "Packages/User/Color Highlighter/themes/Monokai.tmTheme",
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2765,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								2765
							]
						],
						"settings":
						{
							"auto_name": "namespace LekarzCore.ViewModels",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 364.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "proj.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 255.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
